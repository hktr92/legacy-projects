<?php
/**
* WoltLab Community Framework
* Template: register
* Compiled at: Fri, 30 Aug 2013 22:44:36 +0000
* 
* DO NOT EDIT THIS FILE
*/
$this->v['tpl']['template'] = 'register';
?>
<?php
if (!isset($this->pluginObjects['TemplatePluginFunctionHtmloptions'])) {
require_once(WCF_DIR.'lib/system/template/plugin/TemplatePluginFunctionHtmloptions.class.php');
$this->pluginObjects['TemplatePluginFunctionHtmloptions'] = new TemplatePluginFunctionHtmloptions;
}
?><?php
$outerTemplateName57b37cef37bda15db77783dbe85dc53aaf7dd7bf = $this->v['tpl']['template'];
$this->includeTemplate("documentHeader", array(), (1 ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName57b37cef37bda15db77783dbe85dc53aaf7dd7bf;
$this->v['tpl']['includedTemplates']["documentHeader"] = 1;
?>
<head>
	<title>Register - <?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php echo StringUtil::encodeHTML(PAGE_TITLE); ?><?php $_langd1221ef7b538c18e4687bec5f4de50c43a600f09 = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_langd1221ef7b538c18e4687bec5f4de50c43a600f09, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></title>
	<?php
$outerTemplateName98811323473fc585923de1d18f1a3bb954fc2b50 = $this->v['tpl']['template'];
$this->includeTemplate('headInclude', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName98811323473fc585923de1d18f1a3bb954fc2b50;
$this->v['tpl']['includedTemplates']['headInclude'] = 1;
?>
</head>
<body<?php if (isset($this->v['templateName'])) { ?> id="tpl<?php echo StringUtil::encodeHTML(ucfirst($this->v['templateName'])); ?>"<?php } ?>>

<?php
$outerTemplateName4f9badb2c0a08c179c3c07e7a0c3876a3f72d09f = $this->v['tpl']['template'];
$this->includeTemplate('header', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName4f9badb2c0a08c179c3c07e7a0c3876a3f72d09f;
$this->v['tpl']['includedTemplates']['header'] = 1;
?>

<div id="main">
	
	<ul class="breadCrumbs">
		<li><a href="index.php?page=Index<?php echo SID_ARG_2ND; ?>"><img src="<?php ob_start(); ?>indexS.png<?php $_icon9e667ccb9729754c22786fb863207de3ab20ec98 = ob_get_contents(); ob_end_clean(); echo StyleManager::getStyle()->getIconPath($_icon9e667ccb9729754c22786fb863207de3ab20ec98); ?>" alt="" /> <span><?php $this->tagStack[] = array('lang', array()); ob_start(); ?><?php echo StringUtil::encodeHTML(PAGE_TITLE); ?><?php $_langf93e28cce0fb3e262620ae88c721ded377688dbd = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_langf93e28cce0fb3e262620ae88c721ded377688dbd, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></span></a> &raquo;</li>
	</ul>
	
	<div class="mainHeadline">
		<img src="<?php ob_start(); ?>registerL.png<?php $_icon39a1759aa4aa6936e6744e7a2155573308dc1a31 = ob_get_contents(); ob_end_clean(); echo StyleManager::getStyle()->getIconPath($_icon39a1759aa4aa6936e6744e7a2155573308dc1a31); ?>" alt="" />
		<div class="headlineContainer">
			<h2> Register</h2>
		</div>
	</div>
	
	<?php if (isset($this->v['userMessages'])) { ?><?php echo $this->v['userMessages']; ?><?php } ?>
	
	<?php if ($this->v['errorField']) { ?>
		<p class="error">The data you have entered are invalid. Please check the information you have given in the marked fields.</p>
	<?php } ?>
	
	<form method="post" action="index.php?page=Register">
		<div class="border content">
			<div class="container-1">
				<div class="formElement<?php if (isset($this->v['errorType']['username'])) { ?> formError<?php } ?>">
					<div class="formFieldLabel">
						<label for="username">Username</label>
					</div>
					<div class="formField">
						<input type="text" class="inputText" name="username" value="<?php echo StringUtil::encodeHTML($this->v['username']); ?>" id="username" />
						<?php if (isset($this->v['errorType']['username'])) { ?>
							<p class="innerError">
								<?php if ($this->v['errorType']['username'] == 'empty') { ?>Please enter the required information for this field.<?php } ?>
								<?php if ($this->v['errorType']['username'] == 'notValid') { ?>The username you have entered is not valid.<?php } ?>
								<?php if ($this->v['errorType']['username'] == 'notUnique') { ?>The user name you have entered is already in use.<?php } ?>
							</p>
						<?php } ?>
					</div>
					<div class="formFieldDesc">
						<p>The username has to be at least <?php echo StringUtil::encodeHTML(REGISTER_USERNAME_MIN_LENGTH); ?> and at most <?php echo StringUtil::encodeHTML(REGISTER_USERNAME_MAX_LENGTH); ?> letters long.</p>
					</div>
				</div>
			
			<fieldset>
				<legend><label for="email">E-mail Address</label></legend>
				<div class="formElement<?php if (isset($this->v['errorType']['email'])) { ?> formError<?php } ?>">
					<div class="formFieldLabel">
						<label for="email">E-mail Address</label>
					</div>
					<div class="formField">
						<input type="text" class="inputText" name="email" value="<?php echo StringUtil::encodeHTML($this->v['email']); ?>" id="email" />
						<?php if (isset($this->v['errorType']['email'])) { ?>
							<p class="innerError">
								<?php if ($this->v['errorType']['email'] == 'empty') { ?>Please enter the required information for this field.<?php } ?>
								<?php if ($this->v['errorType']['email'] == 'notValid') { ?>The e-mail address you have entered is not valid.<?php } ?>
								<?php if ($this->v['errorType']['email'] == 'notUnique') { ?>The e-mail address you have entered has already been used by another user.<?php } ?>
							</p>
						<?php } ?>
					</div>
					<div class="formFieldDesc">
						<p>Please enter your e-mail address!</p>
					</div>
				</div>
					
				<div class="formElement<?php if (isset($this->v['errorType']['confirmEmail'])) { ?> formError<?php } ?>">
					<div class="formFieldLabel">
						<label for="confirmEmail">Confirm E-mail Address</label>
					</div>
					<div class="formField">
						<input type="text" class="inputText" name="confirmEmail" value="<?php echo StringUtil::encodeHTML($this->v['confirmEmail']); ?>" id="confirmEmail" />
					
						<?php if (isset($this->v['errorType']['confirmEmail'])) { ?>
							<p class="innerError">
								<?php if ($this->v['errorType']['confirmEmail'] == 'notEqual') { ?>The given e-mail address and confirmation e-mail address are not identical.<?php } ?>
							</p>
						<?php } ?>
					</div>
					<div class="formFieldDesc">
						<p>Please confirm your e-mail address!</p>
					</div>
				</div>
			</fieldset>
	
			<fieldset>
				<legend><label for="password">Password</label></legend>
				<div class="formElement<?php if (isset($this->v['errorType']['password'])) { ?> formError<?php } ?>">
					<div class="formFieldLabel">
						<label for="password">Password</label>
					</div>
					<div class="formField">
						<input type="password" class="inputText" name="password" value="<?php echo StringUtil::encodeHTML($this->v['password']); ?>" id="password" />
						
						<?php if (isset($this->v['errorType']['password'])) { ?>
							<p class="innerError">
								<?php if ($this->v['errorType']['password'] == 'empty') { ?>Please enter the required information for this field.<?php } ?>
								<?php if ($this->v['errorType']['password'] == 'notSecure') { ?>For security reasons the password should contain at least <?php echo StringUtil::encodeHTML(REGISTER_PASSWORD_MIN_LENGTH); ?> characters<?php if (REGISTER_PASSWORD_MUST_CONTAIN_LOWER_CASE || REGISTER_PASSWORD_MUST_CONTAIN_UPPER_CASE || REGISTER_PASSWORD_MUST_CONTAIN_DIGIT || REGISTER_PASSWORD_MUST_CONTAIN_SPECIAL_CHAR) { ?>
		and
		<?php if (REGISTER_PASSWORD_MUST_CONTAIN_LOWER_CASE) { ?>small letters<?php } ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_UPPER_CASE) { ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_LOWER_CASE) { ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_DIGIT || REGISTER_PASSWORD_MUST_CONTAIN_SPECIAL_CHAR) { ?>,<?php } else { ?> and<?php } ?> <?php } ?>capital letters<?php } ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_DIGIT) { ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_LOWER_CASE || REGISTER_PASSWORD_MUST_CONTAIN_UPPER_CASE) { ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_SPECIAL_CHAR) { ?>,<?php } else { ?> and<?php } ?> <?php } ?>digits<?php } ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_SPECIAL_CHAR) { ?><?php if (REGISTER_PASSWORD_MUST_CONTAIN_LOWER_CASE || REGISTER_PASSWORD_MUST_CONTAIN_UPPER_CASE || REGISTER_PASSWORD_MUST_CONTAIN_DIGIT) { ?> and <?php } ?>special characters<?php } ?>
		<?php } ?>.<?php } ?>
							</p>
						<?php } ?>
					</div>
					<div class="formFieldDesc">
						<p><?php if (REGISTER_ENABLE_PASSWORD_SECURITY_CHECK && REGISTER_PASSWORD_MIN_LENGTH) { ?>The password has to be <?php echo StringUtil::encodeHTML(REGISTER_PASSWORD_MIN_LENGTH); ?> letters long.<?php } else { ?>A safe password should be at least 8 characters long.<?php } ?></p>
					</div>
				</div>
					
				<div class="formElement<?php if (isset($this->v['errorType']['confirmPassword'])) { ?> formError<?php } ?>">
					<div class="formFieldLabel">
						<label for="confirmPassword">Confirm password</label>
					</div>
					<div class="formField">
						<input type="password" class="inputText" name="confirmPassword" value="<?php echo StringUtil::encodeHTML($this->v['confirmPassword']); ?>" id="confirmPassword" />
						<?php if (isset($this->v['errorType']['confirmPassword'])) { ?>
							<p class="innerError">
								<?php if ($this->v['errorType']['confirmPassword'] == 'notEqual') { ?>The given password and confirmation password are not identical.<?php } ?>
							</p>
						<?php } ?>
					</div>
					<div class="formFieldDesc">
						<p>Please confirm your password!</p>
					</div>
				</div>
			</fieldset>
			
			<?php if (count($this->v['availableLanguages']) > 1) { ?>
				<fieldset>
					<legend><label for="languageID">Language</label></legend>
					<div class="formElement">
						<div class="formFieldLabel">
							<label for="languageID">Language</label>
						</div>
						<div class="formField">
							<?php echo $this->pluginObjects['TemplatePluginFunctionHtmloptions']->execute(array('options' => $this->v['availableLanguages'], 'selected' => $this->v['languageID'], 'name' => 'languageID', 'id' => 'languageID', 'disableEncoding' => true), $this); ?>
						</div>
						<div class="formFieldDesc">
							<p>Please select the user interface language to be shown in!</p>
						</div>
					</div>
					
					<?php if (count($this->v['availableContentLanguages']) > 1) { ?>
						<div class="formGroup">
							<div class="formGroupLabel">
								<label>Show content in the following languages</label>
							</div>
							<div class="formGroupField">
								<fieldset>
									<legend class="formFieldLabel">
										<label>Show content in the following languages</label>
									</legend>
									<div class="formField">
										<ul class="formOptions">
											<?php
if (count($this->v['availableContentLanguages']) > 0) {
foreach ($this->v['availableContentLanguages'] as $this->v['availableLanguageID'] => $this->v['availableLanguage']) {
?>
												<li><label><input type="checkbox" name="visibleLanguages[]" value="<?php echo $this->v['availableLanguageID']; ?>"<?php if (in_array($this->v['availableLanguageID'],$this->v['visibleLanguages'])) { ?> checked="checked"<?php } ?> /> <?php echo $this->v['availableLanguage']; ?></label></li>
											<?php } } ?>
										</ul>
									</div>
									<div class="formFieldDesc">
										<p>Select the content languages that should be shown here.</p>
									</div>
								</fieldset>
							</div>
						</div>
					<?php } ?>
				</fieldset>
			<?php } ?>
	
			<?php if (isset($this->v['additionalFields'])) { ?><?php echo $this->v['additionalFields']; ?><?php } ?>
			
			<?php
if (count($this->v['optionCategories']) > 0) {
foreach ($this->v['optionCategories'] as $this->v['category']) {
?>
				<fieldset>
					<legend><?php if ($this->v['category']['categoryIconM']) { ?><img src="<?php ob_start(); ?><?php echo StringUtil::encodeHTML($this->v['category']['categoryIconM']); ?><?php $_iconb87ce9b8bbb0bdc81e7ff9f9f25a83f88c1e26f2 = ob_get_contents(); ob_end_clean(); echo StyleManager::getStyle()->getIconPath($_iconb87ce9b8bbb0bdc81e7ff9f9f25a83f88c1e26f2); ?>" alt="" /> <?php } ?><?php $this->tagStack[] = array('lang', array()); ob_start(); ?>wcf.user.option.category.<?php echo StringUtil::encodeHTML($this->v['category']['categoryName']); ?><?php $_lang9e522e0f19c8ed7f8345b9ba12756a27bf3c1353 = ob_get_contents(); ob_end_clean(); echo WCF::getLanguage()->getDynamicVariable($_lang9e522e0f19c8ed7f8345b9ba12756a27bf3c1353, $this->tagStack[count($this->tagStack) - 1][1]); array_pop($this->tagStack); ?></legend>
					
					<?php
$outerTemplateNamee099386e064989395604302c580dd421c9696c19 = $this->v['tpl']['template'];
$this->includeTemplate('userOptionFieldList', array('options' => $this->v['category']['options']), (1 ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateNamee099386e064989395604302c580dd421c9696c19;
$this->v['tpl']['includedTemplates']['userOptionFieldList'] = 1;
?>
					
				</fieldset>
			<?php } } ?>
			
			<?php if (isset($this->v['errorType']['captchaString'])) { ?>
				<?php $this->assign('captchaErrorField', 'captchaString'); ?>
				<?php $this->assign('captchaErrorType', $this->v['errorType']['captchaString']); ?>
			<?php } else { ?>
				<?php $this->assign('captchaErrorField', ''); ?>
				<?php $this->assign('captchaErrorType', ''); ?>
			<?php } ?>
			
			<?php
$outerTemplateName55863552411b57e0be8337227a95c3e899d8f71c = $this->v['tpl']['template'];
$this->includeTemplate('captcha', array('errorField' => $this->v['captchaErrorField'], 'errorType' => $this->v['captchaErrorType']), (1 ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName55863552411b57e0be8337227a95c3e899d8f71c;
$this->v['tpl']['includedTemplates']['captcha'] = 1;
?>
			</div>
		</div>	
	
		<div class="formSubmit">
			<input type="submit" accesskey="s" value="Submit" />
			<input type="reset" accesskey="r" value="Reset" />
		</div>
	
		<?php echo SID_INPUT_TAG; ?>
		<input type="hidden" name="action" value="register" />
	</form>

</div>

<?php
$outerTemplateName3d561365f89c8a0aa2f43fe800a386ee416447e7 = $this->v['tpl']['template'];
$this->includeTemplate('footer', array(), (false ? 1 : 0));
$this->v['tpl']['template'] = $outerTemplateName3d561365f89c8a0aa2f43fe800a386ee416447e7;
$this->v['tpl']['includedTemplates']['footer'] = 1;
?>
</body>
</html>